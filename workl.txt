ถ้าต้องการเขียนโปรแกรมทำงานกับรูปแบบชนิดข้อมูลต่อไปนี้ ควรประกาศตัวแปรชนิดใดเบื่อใช้งาน บร้อน อธิบายเหตุผลประกอบ

เกรดเฉลี่ยของนักเรียน
ชนิดข้อมูล: float หรือ double
เหตุผล: เกรดเฉลี่ยมักมีทศนิยม เช่น 3.75 จึงต้องใช้ชนิดข้อมูลที่รองรับตัวเลขทศนิยม

อายุของนักเรียน
ชนิดข้อมูล: int
เหตุผล: อายุเป็นจำนวนเต็มบวก เช่น 15, 16 ไม่ต้องใช้ทศนิยม

ชื่อผู้ใช้งานระบบ
ชนิดข้อมูล: string
เหตุผล: ชื่อผู้ใช้งานเป็นข้อความ เช่น "JohnDoe123"

เงินเดือนละลมรายปีของพนักงาน
ชนิดข้อมูล: float หรือ double
เหตุผล: เงินเดือนรายปีอาจมีทศนิยม เช่น 50000.75

รหัสบัตร ATM
ชนิดข้อมูล: string
เหตุผล: รหัสบัตร ATM ไม่ควรเก็บเป็นตัวเลขเพื่อป้องกันการคำนวณผิดพลาดหรือการแปลงค่าที่ไม่ตั้งใจ

รหัสประจำตัวประชาชน
ชนิดข้อมูล: string
เหตุผล: รหัสประชาชนเป็นลำดับตัวเลขยาว เช่น "1234567890123" ควรเก็บเป็นข้อความเพื่อป้องกันการคำนวณผิดพลาด

หมายเลขโทรศัพท์มือถือ
ชนิดข้อมูล: string
เหตุผล: หมายเลขโทรศัพท์มักมีตัวเลขนำหน้า เช่น "0812345678" และไม่ควรใช้ในการคำนวณ

พื้นที่ของวงกลม
ชนิดข้อมูล: float หรือ double
เหตุผล: พื้นที่วงกลมมักมีทศนิยม เช่น 78.54

น้ำหนัก
ชนิดข้อมูล: float หรือ double
เหตุผล: น้ำหนักอาจมีทศนิยม เช่น 60.5

ราคาสินค้า
ชนิดข้อมูล: float หรือ double
เหตุผล: ราคาสินค้ามักมีทศนิยม เช่น 199.99



ชื่อตัวแปรต่อไปนี้ถูก หรือ คือ ถ้ายืดให้บอกเหตุผลประกอบ 

1. #Name
   - ผิด  
   - เหตุผล: ตัวแปรขึ้นต้นด้วย `#` ซึ่งเป็นสัญลักษณ์สำหรับการเขียนคอมเมนต์  

2. True  
   - ผิด  
   - เหตุผล: `True` เป็นคำสงวนใน Python (Boolean)  

3. name   
   - ถูก  
   - เหตุผล: เป็นตัวแปรที่ตั้งชื่อตามกฎการตั้งชื่อ  

4. return  
   - ผิด
   - เหตุผล: `return` เป็นคำสงวนใน Python  

5. first name, 
   - ผิด  
   - เหตุผล: มีช่องว่างและเครื่องหมาย `,` ซึ่งไม่อนุญาตในชื่อ  

6. first_name.  
   - ผิด 
   - เหตุผล: มีเครื่องหมายจุด `.` ซึ่งไม่อนุญาตในชื่อ  

7. "haha"
   - ผิด 
   - เหตุผล: ชื่อตัวแปรห้ามอยู่ในเครื่องหมายคำพูด  

8. 1lon  
   - ผิด  
   - เหตุผล: ชื่อตัวแปรห้ามขึ้นต้นด้วยตัวเลข  

9. gr@de  
   - ผิด  
   - เหตุผล: มีสัญลักษณ์พิเศษ `@` ซึ่งไม่อนุญาต  

10. if   
    - ผิด
    - เหตุผล: `if` เป็นคำสงวนใน Python  

11. while  
    - ผิด  
    - เหตุผล: `while` เป็นคำสงวนใน Python  

12. [b]
    - ผิด 
    - เหตุผล: ชื่อตัวแปรห้ามมีเครื่องหมาย `[` และ `]`  

13. _nane 
    - ถูก  
    - เหตุผล: ขึ้นต้นด้วย `_` และไม่มีตัวอักษรต้องห้าม  

14. pyThon   
    - ถูก 
    - เหตุผล: เป็นตัวแปรที่ตั้งชื่อตามกฎการตั้งชื่อ  

15. 20 
    - ผิด 
    - เหตุผล: ชื่อตัวแปรห้ามเป็นตัวเลขล้วน  

